{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}

{$I Utils.txt}

Var
  _Xml, _SituacaoLote, _XmlNota: string;
  _NumNota, i: Integer;
begin

  Progress('Carregando configurações de XSDDataset.');
  Datasets.XsdFile := PathXsd + 'nfse v2 01.xsd';
  Datasets.XsdElementName := 'ConsultarLoteRpsResposta';
  Datasets.ConfigSection := 'RETORNO_CONSULTALOTERPS';
  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;

  _Xml := Input;
  _XmlNota := _Xml;
  _XmlNota := XmlSelect(_XmlNota, '//*[local-name()="ConsultarLoteRpsResposta"]//*[local-name()="ConsultarLoteRpsResposta"]');
  if _XmlNota = '' then
    _Xml := XmlSelect(_Xml, '//*[local-name()="ConsultarLoteRpsResposta"]')
  else
    _Xml := _XmlNota;

  if xmlSelectNodeValue(_Xml,'//*[local-name()="Situacao"]',_SituacaoLote) then
    Params.Add('SituacaoLote='+_SituacaoLote)
  else
    Params.Add('SituacaoLote=');

  if Pos('<faultstring',input) > 0 then
  begin
    Input := StringReplace(Input, #13#10, '', [rfReplaceAll]);
    Params.Add('faultstring='+input);
  end
  else
  begin
    Params.Add('XmlLote='+_Xml);
    Datasets.LoadFromXMLContent(_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
