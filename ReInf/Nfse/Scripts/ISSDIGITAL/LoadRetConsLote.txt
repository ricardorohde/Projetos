{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
      Params : TStringList;
}
Var
  _Xml, _SituacaoLote: string;
  i: Integer;
begin
  if Pos('<faultstring', Input) > 0 then
  begin
      Input := StringReplace(Input, #13#10, '', [rfReplaceAll]);
    Params.Add('faultstring='+input);
  end
  else
  begin
    Progress('Carregando configurações de XSDDataset.');
    Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';
    if Trim(MappingXsdFileName) <> '' then
      Datasets.MappingFileName := MappingXsdFileName;

    Progress('Criando XSDDataset.');
    Datasets.CreateXSDDataset;

    _Xml := XmlDeepNodeSearch(Input, Datasets.XsdElementName, '//*[local-name()="ConsultarLoteRpsResposta"]');

    if Pos('<ListaMensagemRetorno><MensagemRetorno>', _Xml) = 0 then
    begin
      _Xml := StringReplace(_Xml, '<ListaMensagemRetorno>', '<ListaMensagemRetorno><MensagemRetorno>', [RfReplaceAll]);
      _Xml := StringReplace(_Xml, '</ListaMensagemRetorno>', '</MensagemRetorno></ListaMensagemRetorno>', [RfReplaceAll]);
    end;

    if xmlSelectNodeValue(_Xml,'//*[local-name()="Situacao"]',_SituacaoLote) then
      Params.Add('SituacaoLote='+_SituacaoLote)
    else
      Params.Add('SituacaoLote=');

    Params.Add('XmlLote='+_Xml);
      Datasets.LoadFromXMLContent(_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
