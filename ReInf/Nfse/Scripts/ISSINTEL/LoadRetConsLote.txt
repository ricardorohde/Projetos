 {
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml, _XmlLote,_SituacaoLote,_FaultString, _DataHoraCanc, _aux, _XmlSit : string;
  _NFSE, _DSFalha: TSpdXSDClientDataSet;
  i: Integer;
begin
  Progress('Carregando configurações do XSDDataset');

  Datasets.XsdFile := PathXsd + 'nfse.xsd';
  if pos('ConsultarSituacaoLoteRpsResposta', Input) > 0 then
    Datasets.ConfigSection := 'RETORNO_CONSULTARSITUACAOLOTE'
  else
    Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';

  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;
  _XmlLote := XmlDeepNodeSearch(Input, 'ConsultarLoteRpsResposta', '//*[local-name()="ConsultarLoteRpsResposta"]');

  if _XmlLote = '' then
  begin
    //Capturando o xml da consulta de situação do lote.
    _XmlSit :=  XmlDeepNodeSearch(Input,'ConsultarSituacaoLoteRpsResposta','//*[local-name()="ConsultarSituacaoLoteRpsResposta"]');
    if xmlSelectNodeValue(_XmlSit, '//*[local-name()="Situacao"]', _SituacaoLote) then
      Params.Add('SituacaoLote=' + _SituacaoLote)
    else
      Params.Add('SituacaoLote='+_XmlSit);
    Datasets.LoadFromXMLContent(_XmlSit);
    Progress('XML carregado com sucesso.');
  end
  else
  begin
    _FaultString := XmlSelect(Input,'//*[local-name()="faultstring"]');
    if _FaultString <> '' then
      Params.Add('faultstring='+_FaultString)
    else
    begin
     //erro que acontece quando o webservice tem quebra de esquema
      if Pos('<ii:Fault', Input) > 0 then
      begin
        _DSFalha := Datasets.GetDataSetByName('MensagemRetorno');
        _DSFalha.Insert;
        XmlSelectNodeValue(Input, '//*[local-name()="Code"]', _aux);
        _DSFalha.FieldByName('MotivoCodigo').AsString := _aux;
        XmlSelectNodeValue(Input, '//*[local-name()="Reason"]', _aux);
        _DSFalha.FieldByName('MotivoMensagem').AsString := _aux;
        XmlSelectNodeValue(Input, '//*[local-name()="Detail"]', _aux);
        _DSFalha.FieldByName('MotivoCorrecao').AsString := _aux;
        _DSFalha.Post;
        Params.Add('Sucesso=0');
      end
      else
      begin
        // Corrigindo o XML para ser possível carregar no XsdDataset
        _Xml := StringReplace(_XmlLote, #9, '', [rfReplaceAll]);
        _Xml := StringReplace(_Xml, '>'+#13#10, '>', [rfReplaceAll]);
        _Xml := StringReplace(_Xml, '><!--CRLF-->', '>', [rfReplaceAll]);
        _Xml := StringReplace(_Xml, '</ii:Nfse><ii:Nfse>', '</ii:Nfse></ii:CompNfse><ii:CompNfse><ii:Nfse>', [rfReplaceAll]);
        _Xml := StringReplace(_Xml, '</ii:NfseCancelamento><ii:Nfse>', '</ii:NfseCancelamento></ii:CompNfse><ii:CompNfse><ii:Nfse>', [rfReplaceAll]);

        Datasets.LoadFromXMLContent(_Xml);
        Params.Add('XmlLote='+_Xml);
        _NFSE := Datasets.GetDataSetByName('CompNfse');

        _NFSE.First;
        i := 1;
        while not _NFSE.Eof do
        begin
          if XmlSelectNodeValue(_Xml, '//*[local-name()="CompNfse"][' + IntToStr(i) + ']//*[local-name()="DataHora"]', _DataHoraCanc) then
          begin
            _NFSE.Edit;
            _NFSE.FieldByName('DataCancelamento').AsString := _DataHoraCanc;
            _NFSE.Post;
          end;

          i := i + 1;
          _NFSE.Next;
        end;
        Progress('XML carregado com sucesso');
      end;
    end;
  end;
end.
