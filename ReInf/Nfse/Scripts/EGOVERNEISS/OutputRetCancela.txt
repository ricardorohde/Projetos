{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

{$I ..\Comuns\Utils.txt}

Var
  _DSSucesso, _DSFalha : TSpdXSDClientDataSet;
  _ListFields : TStringList;

  function GetMotivo : string;
  begin
    if Params.Values['faultstring'] <> '' then
    begin
      Result := 'Falha na comunicação com WebService-' + Input;
    end
    else
    if GetValueTag('a:Erro', Params.Values['XmlRetorno'])   = 'true' then
      Result := GetValueTag('a:MensagemErro', Params.Values['XmlRetorno']);
  end;

  function GetStatus : string;
  begin
    if GetValueTag('a:Erro', Params.Values['XmlRetorno']) = 'true' then
      Result := 'ERRO'
    else
      Result := 'SUCESSO';
  end;

  //Função para Capturar a Ordem dos Campos do Params
  function CreateFieldsResponse : TStringList;
  var
    _i: Integer;
  begin
    Result := TStringList.Create;
    Result.Text := StringReplace(Params.Values['ListaCampos'], ',',#13#10,[rfReplaceAll]);
    // Checar se os campos da ListaCampos são suportados
    for _i := 0 to Result.Count - 1 do
    begin
      if not AnsiMatchText(Trim(Result[_i]), ['Status','Motivo','DataCancelamento']) then
        RaiseException('Campo "' + Result[_i] + '" não suportado')
      else
        Result[_i] := Trim(Result[_i]);
    end;
  end;

  //Função que passa o valor a lista de resultado
  procedure AddValueListFields(const aParamName, aValue : string);
  begin
    if _ListFields.IndexOf(aParamName) > -1 then
      _ListFields[_ListFields.IndexOf(aParamName)] := aValue;
  end;

  //Função que formata a lista em resposta, considerando DelimitadorDoCampo
  function FormatLineResult : string;
  var
    i : integer;
  begin
    Result := '';
    for i := 0 to _ListFields.Count - 1 do
      Result := Result + _ListFields[i] + Params.Values['DelimitadorDoCampo']
  end;

begin
  Progress('Adicionando valores aos campos.');
  _ListFields := CreateFieldsResponse;
  if _ListFields <> nil then
  Try
    AddValueListFields('Motivo',GetMotivo);
    AddValueListFields('Status', GetStatus);
    AddValueListFields('DataCancelamento','');
    Output := FormatLineResult;
  Finally
    _ListFields.Free;
    Progress('Valores adicionados com sucesso.');
  end;

end.
