{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml, _SituacaoLote, _Situacao : string;
begin
  Progress('Carregando configurações de XSDDataset.');
  Datasets.XsdFile := PathXsd + 'nfse_v2010.xsd';
  if pos('ConsultarSituacaoLoteRpsResposta', Input) > 0 then
    Datasets.ConfigSection := 'RETORNO_CONSULTARSITUACAOLOTE'
  else
    Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';

  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;

  _Xml := StringReplace(Input, '<!--CRLF-->', '', [rfReplaceAll]);
  _Situacao := XmlDeepNodeSearch(_Xml,'ConsultarSituacaoLoteRpsResposta','//*[local-name()="ConsultarSituacaoLoteRpsResposta"]');

  if _Situacao <> '' then
  begin
    // Consulta de Situaçao de Lote
    if xmlSelectNodeValue(_Situacao,'//*[local-name()="Situacao"]',_SituacaoLote) then
      Params.Add('SituacaoLote='+_SituacaoLote)
    else
    begin
      Params.Add('Situacao='+_Situacao);
      Datasets.LoadFromXMLContent(_Situacao);
      Progress('XML carregado com sucesso.');
    end;
  end
  else
  begin
    // Consulta de Lote
    Progress('Carregando XML de Consulta de Lote');
    _Xml := XmlDeepNodeSearch(Input, Datasets.XsdElementName, '//*[local-name()="ConsultarLoteRpsResposta"]');
    if Pos('<faultstring',input) > 0 then
      Params.Add('faultstring='+input)
    else
    begin
      _Xml:= StringReplace(_Xml, '&amp;', '&amp\delimiter',  [rfReplaceAll]);
      _Xml:= StringReplace(_Xml, ';', '\delimiter',  [rfReplaceAll]);
      _Xml:= StringReplace(_Xml, '&amp\delimiter', '&amp;',  [rfReplaceAll]);
      Datasets.LoadFromXMLContent(_Xml);
      Params.Add('XmlLote='+_Xml);
      Progress('XML carregado com sucesso.');
    end;
  end;
end.
