{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}
Var
  _NFSE, _DSListaMsgRetorno : TSpdXSDClientDataSet;
  _ListFields : TStringList;
  _Status: string;

  procedure GetPonteirosDataSets;
  begin
    _NFSE := Datasets.GetDataSetByName('ConsultarNfseRpsResposta');
    _DSListaMsgRetorno := Datasets.GetDataSetByName('MensagemRetorno');

    if (_NFSE = nil) then
      RaiseException('DataSet ConsultarNfseRpsResposta não foi carregado corretamente.');
    if (_DSListaMsgRetorno = nil) then
     RaiseException('DataSet MensagemRetorno não foi carregado corretamente.');
  end;

  function GetMotivo : string;
  begin
    if Params.Values['faultstring'] <> '' then
  begin
    Result := 'Falha na comunicação com WebService-' + Input;
  end
    else if _DSListaMsgRetorno.FieldByName('MotivoCorrecao').AsString <> '' then
      begin
        _DSListaMsgRetorno.First;
        while Not _DSListaMsgRetorno.Eof do
          begin
            if (Result = '') then
              Result := Format3('%s-%s (%s)', _DSListaMsgRetorno.FieldByName('MotivoCodigo').AsString,
                                             Trim(_DSListaMsgRetorno.FieldByName('MotivoMensagem').AsString),
                                             Trim(_DSListaMsgRetorno.FieldByName('MotivoCorrecao').AsString))
            else
              Result := Format4('%s: %s-%s (%s)', Result, _DSListaMsgRetorno.FieldByName('MotivoCodigo').AsString,
                                                 Trim(_DSListaMsgRetorno.FieldByName('MotivoMensagem').AsString),
                                                 Trim(_DSListaMsgRetorno.FieldByName('MotivoCorrecao').AsString));
            _DSListaMsgRetorno.Next;
          end;
      end;
  end;

  function GetStatus : string;
  begin
    if (Params.Values['faultstring'] = '') and (GetMotivo = '') then
      Result := 'SUCESSO'
  else
    Result := 'ERRO';
  end;

  function GetNaoCanceladaPeloPortal : boolean;
  begin
    if(_DSListaMsgRetorno.FieldByName('MotivoMensagem').AsString <> 'CANCELADA') then
      Result := True
    else
      Result := False;
  end;

  function GetSituacaoNFSE : string;
  begin
    if (_NFSE.FieldByName('DataCancelamento').AsString = '') and (GetNaoCanceladaPeloPortal) then
    begin
       if (GetMotivo <> '') or (Params.Values['faultstring'] <> '') then
          Result := 'ERRO'
       else
          Result := 'AUTORIZADA';
    end
    else
      Result := 'CANCELADA';
  end;

  function GetChaveCancelamento : string;
  begin
    Result := _NFSE.FieldByName('NumeroNFSe').AsString;
  end;

  function GetXmlNFSe : string;
  begin
  Result := XmlSelect(Params.Values['XmlNFSe'], '//*[local-name()="CompNfse"]')
  end;

  //Função para Capturar a Ordem dos Campos do Params
  function CreateFieldsResponse : TStringList;
  var
    _i: Integer;
  begin
    Result := TStringList.Create;
    Result.Text := StringReplace(Params.Values['ListaCampos'], ',',#13#10,[rfReplaceAll]);
  // Checar se os campos da ListaCampos são suportados
    for _i := 0 to Result.Count - 1 do
    begin
      if not AnsiMatchText(Trim(Result[_i]), ['Status','Motivo','Cnpj','InscMunicipal',
        'SerieRps','NumeroRps','NumeroNFSe','DataEmissaoNFSe','DataAutorizacao',
        'CodVerificacao','Situacao','DataCancelamento','ChaveCancelamento','Xml'
        ,'Tipo']) then
        RaiseException('Campo "' + Result[_i] + '" não suportado')
      else
        Result[_i] := Trim(Result[_i]);
    end;
  end;

  //Função que passa o valor a lista de Resultado
  procedure AddValueListFields(const aParamName, aValue : string);
  begin
    if _ListFields.IndexOf(aParamName) > -1 then
      _ListFields[_ListFields.IndexOf(aParamName)] := aValue;
  end;

  //Função que formata a lista em resposta, considerando DelimitadorDoCampo
  function FormatLineResult : string;
  var
    i : integer;
  begin
    Result := '';
    for i := 0 to _ListFields.Count - 1 do
      Result := Result + _ListFields[i] + Params.Values['DelimitadorDoCampo']
  end;

begin
  Progress('Obtendo ponteiros dos datasets.');
  GetPonteirosDataSets;
  _ListFields := CreateFieldsResponse;
  if ((_ListFields <> nil) and (_ListFields.Text <> '')) then
  Try
    Progress('Adicionando valores aos campos.');
    _Status := GetStatus;
  if _Status <> 'ERRO' then
  begin
    AddValueListFields('Status', _Status);
    AddValueListFields('Motivo', GetMotivo);

      if _NFSE.FieldByName('Cpf').AsString <> '' then
      AddValueListFields('Cpf', _NFSE.FieldByName('Cpf').AsString)
    else
      AddValueListFields('Cnpj', _NFSE.FieldByName('Cnpj').AsString);

      AddValueListFields('InscMunicipal', _NFSE.FieldByName('InscMunicipal').AsString);
      AddValueListFields('SerieRps', _NFSE.FieldByName('SerieRps').AsString);
      AddValueListFields('NumeroRps', _NFSE.FieldByName('NumeroRps').AsString);
      AddValueListFields('NumeroNFSe', _NFSE.FieldByName('NumeroNFSe').AsString);
      AddValueListFields('DataEmissaoNFSe', _NFSE.FieldByName('DataEmissaoNFSe').AsString);
      AddValueListFields('DataAutorizacao', _NFSE.FieldByName('DataAutorizacao').AsString);
      AddValueListFields('CodVerificacao', _NFSE.FieldByName('CodVerificacao').AsString);
      AddValueListFields('Situacao', GetSituacaoNFSe);
      AddValueListFields('DataCancelamento', _NFSE.FieldByName('DataCancelamento').AsString);
      AddValueListFields('ChaveCancelamento', GetChaveCancelamento);
      AddValueListFields('Xml', GetXmlNFSe);
      AddValueListFields('Tipo', _NFSE.FieldByName('Tipo').AsString);
    end
  else
  begin
    AddValueListFields('Status', _Status);
    AddValueListFields('Motivo', GetMotivo);

      AddValueListFields('Cnpj', '');
      AddValueListFields('InscMunicipal', '');
      AddValueListFields('SerieRps', '');
      AddValueListFields('NumeroRps', '');
      AddValueListFields('NumeroNFSe', '');
      AddValueListFields('DataEmissaoNFSe', '');
      AddValueListFields('DataAutorizacao', '');
      AddValueListFields('CodVerificacao', '');
      AddValueListFields('Situacao', '');
      AddValueListFields('DataCancelamento', '');
      AddValueListFields('ChaveCancelamento', '');
      AddValueListFields('Xml', '');
      AddValueListFields('Tipo', '');
  end;
    Output := FormatLineResult;
  Finally
    _ListFields.Free;
    Progress('Valores adicionados com sucesso.');
  end;
end.