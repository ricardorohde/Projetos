{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

{$I ..\Comuns\Utils.txt}

Var
  _Xml : string;
  Value: Boolean;
  _Sucesso : String;

begin
  Progress('Carregando configurações do XSDDataset');
  Datasets.XsdFile := PathXsd + 'RetornoEnvioLoteRPS.xsd';
  Datasets.XsdElementName := 'RetornoEnvioLoteRPS';
  Datasets.ConfigSection := 'RETORNO_ENVIAR';
  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;
  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;
  if (Pos('enviarSincronoReturn', Input) > 0) or (Pos('EnviarLoteSincrono', Input) > 0) then
    params.add('EnvioSincrono=True');

  if pos('<!--CRLF-->', Input) > 0 then
  begin
    Input := StringReplace(Input, '<!--CRLF-->', #13#10, [rfReplaceAll]);
    _Xml := XmlDeepNodeSearch(Input, Datasets.XsdElementName, '//*[namespace-uri()="http://localhost:8080/WsNFe2/lote" and local-name()="RetornoEnvioLoteRPS"]');
    _Xml := StringReplace(_Xml, #13#10, '<!--CRLF-->', [rfReplaceAll]);
  end
  else
    _Xml := XmlDeepNodeSearch(Input, Datasets.XsdElementName, '//*[namespace-uri()="http://localhost:8080/WsNFe2/lote" and local-name()="RetornoEnvioLoteRPS"]');

  if Pos('<faultstring',input) > 0 then
    Params.Add('faultstring='+input)
  else
  begin
    if _Xml = '' then
    begin
      Value := XmlSelectNodeValue(Input,'//enviarReturn/text()',_Xml);
      if _Xml = '' then
        Value := XmlSelectNodeValue(Input,'//enviarSincronoReturn/text()',_Xml);
      Params.Add('Erro='+_Xml);
    end
    else
      Datasets.LoadFromXMLContent(_Xml);
    Progress('XML carregado com sucesso');
  end;
end.
