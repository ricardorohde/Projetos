{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml : string;

{$I Utils.txt}

begin
  if Pos('<faultstring',input) > 0 then
  begin
    Input := StringReplace(Input, #13#10, '', [rfReplaceAll]);
    Params.Add('faultstring='+input);
  end
  else
  begin
    Progress('Carregando configurações de XSDDataset.');
    Datasets.ConfigSection := 'RETORNO_CONSULTARNFSE';

    if Trim(MappingXsdFileName) <> '' then
      Datasets.MappingFileName := MappingXsdFileName;

    Progress('Criando XSDDataset.');
    Datasets.CreateXSDDataset;

    _XML := Input;
    _Xml := StringReplace(_Xml, '<!--CRLF-->', '&lt;!--CRLF--&gt;', [rfReplaceAll]);
    _Xml := StringReplace(_Xml, '&lt;!--CRLF--&gt;', '', [rfReplaceAll]);

    _Xml := XmlDeepNodeSearch(_XML, Datasets.XsdElementName,
      '//*[local-name()="ConsultarNfseServicoPrestadoResposta"]');

    // Em alguns casos o XmlDeepNodeSearch pode indentar o XML, causando problemas no CSV
    _Xml := UnindentXml(_Xml);

    _Xml := CorrigirCancelamentoRetorno(_Xml);

    Params.Add('XmlNFSe='+_Xml);
    Datasets.LoadFromXMLContent(_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
