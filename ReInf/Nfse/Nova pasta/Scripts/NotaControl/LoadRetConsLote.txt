{
  Variáveis externas disponíveis: 
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
{$I ..\Comuns\Utils.txt}
Var
  _Xml,_SituacaoLote : string;
begin
  Progress('Carregando configurações do XSDDataset');

  Datasets.XsdFile := PathXsd + 'consulta.xsd';
  Datasets.XsdElementName := 'tbnfd';
  Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';
  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;
  Progress('Criando XSDDataset.');
  Datasets.CreateXSDDataset;

  //Caso tenha situações de retorno com situacao de processamento, alterar esta linha.
  // if xmlSelectNodeValue(Input,'//*[namespace-uri()="" and local-name()="Header"]//*[local-name()="SituacaoLote"]',_SituacaoLote) then
  //    Params.Add('SituacaoLote='+_SituacaoLote)
  // else 
  //   Params.Add('SituacaoLote=');

  _Xml := StringReplace(Input, '&', '&amp;', [rfReplaceAll]);
  _Xml := XmlDeepNodeSearch(_Xml, Datasets.XsdElementName, '//*[local-name()="tbnfd"]');

  { Em alguns tipos de erros a estrutura do XML é diferente do usual do padrão NotaControl.
      Ex: <nfd><erro codigo="1060">O documento ainda não foi processado.</erro></nfd>
      Nesse caso vamos adaptar o XML para o padrão usual, para poder ser carregado pelo XsdDs.}
  if (_Xml = '') and (Pos('<nfd>', Input) > 0) then
  begin
    _Xml := Input;
    _Xml := StringReplace(_Xml, '<nfd>', '<tbnfd>', []);
    _Xml := StringReplace(_Xml, '</nfd>', '</tbnfd>', []);
    _Xml := StringReplace(_Xml, '<erro ', '<nfderro ', []);
    _Xml := StringReplace(_Xml, '</erro>', '</nfderro>', []);
    _Xml := StringReplace(_Xml, 'codigo=', 'codigoerro=', []);

    _Xml := XmlSelect(_Xml, '//*[local-name()="tbnfd"]');
  end;

  if Pos('<faultstring',Input) > 0 then 
  begin    
    _Xml := UnescapeXml(Input);
    Params.Add('faultstring=' + _Xml);
  end
  else
  begin
    If Pos('<nfderro', Input) > 0 then
      // Replace para contornar comportamento do xsddataset que não estava carregando o dataset de erro.
      _Xml := StringReplace(_Xml, '</nfderro>', '<i>i</i></nfderro>', [rfReplaceAll]);
    Datasets.LoadFromXMLContent(_Xml);
    Params.Add('XmlLote='+_Xml);
    Progress('XML carregado com sucesso');
  end;
end.
