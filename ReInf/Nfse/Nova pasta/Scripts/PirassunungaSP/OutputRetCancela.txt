{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

Var
  _ListFields : TStringList;
  _Status, _Motivo : string;

  function GetStatus : string;
  begin
    if (Pos('Cancelada(s) com Sucesso!', Params.Values['XML']) = 0) or (Params.Values['faultstring'] <> '')  then
      Result := 'ERRO'
    else
      Result := 'SUCESSO';
  end;

  function GetMotivo : string;
  begin
    if Params.Values['faultstring'] <> '' then
    begin
      Result := 'Falha na comunicação com WebService-' + Input;
    end
    else if (Pos('Cancelada(s) com Sucesso!', Params.Values['XML']) = 0) then
      Result := Params.Values['XML'];
  end;

  //Função para Capturar a Ordem dos Campos do Params
  function CreateFieldsResponseCancelamento : TStringList;
  var
    _i: Integer;
  begin
    Result := TStringList.Create;
    Result.Text := StringReplace(Params.Values['ListaCampos'], ',',#13#10,[rfReplaceAll]);

    // Checar se os campos da ListaCampos são suportados
    for _i := 0 to Result.Count - 1 do
    begin
      if not AnsiMatchText(Trim(Result[_i]), ['Status','Motivo','DataCancelamento']) then
        RaiseException('Campo "' + Result[_i] + '" não suportado')
      else
        Result[_i] := Trim(Result[_i]);
    end;
  end;

  //Função que passa o valor a lista de resultado
  procedure AddValueListFields(const aParamName, aValue : string);
  begin
    if _ListFields.IndexOf(aParamName) > -1 then
      _ListFields[_ListFields.IndexOf(aParamName)] := aValue;
  end;

  //Função que formata a lista em resposta, considerando DelimitadorDoCampo
  function FormatLineResult(var aListFields : TStringList) : string;
  var
    i : integer;
  begin
    Result := '';
    for i := 0 to aListFields.Count - 1 do
      Result := Result + aListFields[i] + Params.Values['DelimitadorDoCampo'];
  end;

begin
  _Status := GetStatus;
  _Motivo := GetMotivo;
  Progress('Adicionando valores aos campos.');
  _ListFields := CreateFieldsResponseCancelamento;
  if _ListFields <> nil then
  Try
    AddValueListFields('Status', _Status);
    AddValueListFields('Motivo', _Motivo);
    AddValueListFields('DataCancelamento', '');
    Output := FormatLineResult(_ListFields);
  Finally
    _ListFields.Free;
    Progress('Valores adicionados com sucesso.');
  end;
end.
