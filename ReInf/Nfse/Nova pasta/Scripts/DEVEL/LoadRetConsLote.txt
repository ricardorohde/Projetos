 {
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml, _SituacaoLote, _XmlSit : string;
begin
  Progress('Carregando configurações do XSDDataset');

  if pos('ConsultarSituacaoLoteRpsResposta', Input) > 0 then
    Datasets.ConfigSection := 'RETORNO_CONSULTARSITUACAOLOTE'
  else
    Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';

  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  Progress('Criando XSDDataset.');

  Datasets.CreateXSDDataset;

  //Capturando o xml da consulta de situação do lote.
  _XmlSit :=  XmlDeepNodeSearch(Input,'ConsultarSituacaoLoteRpsResposta','//*[local-name()="ConsultarSituacaoLoteRpsResposta"]');
  if _XmlSit <> '' then
  begin
    if xmlSelectNodeValue(_XmlSit, '//*[local-name()="Situacao"]', _SituacaoLote) then
      Params.Add('SituacaoLote=' + _SituacaoLote)
    else
    begin
      Params.Add('SituacaoLote='+_XmlSit);
      Datasets.LoadFromXMLContent(_XmlSit);
    end;
  end
  else
  begin
   // Header quando o parâmetro Cabecalho=true.
    if xmlSelectNodeValue(Input,'//*[namespace-uri()="" and local-name()="Header"]//*[local-name()="SituacaoLote"]',_SituacaoLote) then
      Params.Add('SituacaoLote=' + _XmlSit)
    else
      Params.Add('SituacaoLote=');
      _Xml := XmlDeepNodeSearch(Input, Datasets.XsdElementName, '//*[local-name()="ConsultarLoteRpsResposta"]');

    if Pos('<faultstring',input) > 0 then
      Params.Add('faultstring='+input)
    else
    begin
      Datasets.LoadFromXMLContent(_Xml);
      Params.Add('XmlLote='+_Xml);
      Progress('XML carregado com sucesso');
    end;
  end;
end.
