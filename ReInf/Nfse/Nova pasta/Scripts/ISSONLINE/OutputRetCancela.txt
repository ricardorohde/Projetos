{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

Var
  _ListFields : TStringList;
  _Motivo, _Xml: String;

  function GetMotivo(const aXML: string) : string;
  var
    _XML, _Mot: string;
  begin
    if Params.Values['faultstring'] <> '' then
    begin
      Result := 'Falha na comunicação com WebService-' + Input;
    end else
    begin
      if xmlSelectNodeValue(aXML, '//*[local-name()="NFSE"]//*[local-name()="NOTA"]', _Mot) then
        Result := _Mot
      else
        Result := '';
    end;
  end;

  function GetDataCancelamento(const aXML: string) : string;
  begin
    Result := '';
  end;

  function GetStatus(const aMotivo: string) : string;
  begin
    if (_Motivo <> 'Nota Cancelada Com Sucesso') or (Params.Values['faultstring'] <> '') then
      Result := 'ERRO'
    else
      Result := 'SUCESSO';
  end;

  //Função para Capturar a Ordem dos Campos do Params
  function CreateFieldsResponse : TStringList;
  var
    _i: Integer;
  begin
    Result := TStringList.Create;
    Result.Text := StringReplace(Params.Values['ListaCampos'], ',',#13#10,[rfReplaceAll]);

    // Checar se os campos da ListaCampos são suportados
    for _i := 0 to Result.Count - 1 do
    begin
      if not AnsiMatchText(Trim(Result[_i]), ['Status','Motivo','DataCancelamento']) then
        RaiseException('Campo "' + Result[_i] + '" não suportado')
      else
        Result[_i] := Trim(Result[_i]);
    end;
  end;

  //Função que passa o valor a lista de resultado
  procedure AddValueListFields(const aParamName, aValue : string);
  begin
    if _ListFields.IndexOf(aParamName) > -1 then
      _ListFields[_ListFields.IndexOf(aParamName)] := aValue;
  end;

  //Função que formata a lista em resposta, considerando DelimitadorDoCampo
  function FormatLineResult : string;
  var
    i : integer;
  begin
    Result := '';
    for i := 0 to _ListFields.Count - 1 do
      Result := Result + _ListFields[i] + Params.Values['DelimitadorDoCampo']
  end;

  begin
    _Xml := Params.Values['XmlNFSe'];
    _Motivo := GetMotivo(_XML);

    Progress('Adicionando valores aos campos.');
    _ListFields := CreateFieldsResponse;

    if _ListFields <> nil then

      Try
        AddValueListFields('Motivo', _Motivo);
        AddValueListFields('Status', GetStatus(_Motivo));
        AddValueListFields('DataCancelamento', '');
        Output := FormatLineResult;
      Finally
        _ListFields.Free;

    Progress('Valores adicionados com sucesso.');
  end;
end.
