{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
    Params : TStringList;
}
Var
  _Xml, _Situacao : string;
begin
  Progress('Carregando configurações de XSDDataset.');

  Datasets.XsdFile := PathXsd + 'spd_envio.xsd';
  Datasets.XsdElementName := 'ConsultarLoteRpsResposta';
  Datasets.ConfigSection := 'RETORNO_CONSULTARLOTE';

  if Trim(MappingXsdFileName) <> '' then
    Datasets.MappingFileName := MappingXsdFileName;

  // Substituindo & avulsos por &amp;
  _Xml := StringReplace(Input, '&amp;', '###eamp###', [rfReplaceAll]);
  _Xml := StringReplace(_Xml, '&', '&amp;', [rfReplaceAll]);
  _Xml := StringReplace(_Xml, '###eamp###', '&amp;', [rfReplaceAll]);

  _Situacao := XmlDeepNodeSearch(_Xml, 'INCONSISTENCIA', '//*[local-name()="INCONSISTENCIA"]');

  if (Pos('STATUS>Validando</STATUS', _Xml) > 0) or (Pos('STATUS&gt;Validando&lt;/STATUS', _Xml) > 0) then
    _Situacao := 'EMPROCESSAMENTO';

  if _Situacao <> '' then
  begin
    Params.Add('Situacao='+_Situacao);
  end
  else
  begin
    Progress('Carregando XML de Consulta de Lote');
    _Xml := XmlSelect(_Xml, '//*[local-name()="NFSE"]');

    if Pos('<faultstring',input) > 0 then
      Params.Add('faultstring='+input)
    else
    begin
      Params.Add('XmlLote='+_Xml);
      Progress('XML carregado com sucesso');
    end;
  end;
end.
