{
  Variáveis externas disponíveis:
    PathXsd: string;
    MappingXsdFileName: string;
    Input: string;
    Datasets: TspdXSDDataset;
}

{$I ..\Comuns\Utils.txt}

  function EnvioSincrono : Boolean;
  begin
    Result := (Pos('GerarNfseResposta', Input) > 0);
  end;

  function GetConfigSection : string;
  begin
    if EnvioSincrono then
      Result := 'RETORNO_ENVIOSINCRONO'
    else
      Result := 'RETORNO_ENVIAR';
  end;

Var
  _Xml: string;
begin
  if Pos('<faultstring',input) > 0 then
  begin
    Input := StringReplace(Input, #13#10, '', [rfReplaceAll]);
    Params.Add('faultstring='+input);
  end
  else
  begin
    Progress('Carregando configurações de XSDDataset.');
    Datasets.XsdFile := PathXsd + 'nfse v2 01.xsd';

    Datasets.ConfigSection := GetConfigSection;

    if Trim(MappingXsdFileName) <> '' then
      Datasets.MappingFileName := MappingXsdFileName;

    Progress('Criando XSDDataset.');
    Datasets.CreateXSDDataset;

    if EnvioSincrono then
    begin
      _Xml := UnEscapeXml(Input);
      _Xml := StringReplace(_Xml, '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>', '', []);
      _Xml := XmlDeepNodeSearch(_Xml, Datasets.XsdElementName,
        '//*[local-name()="GerarNfseResposta"]');
      Params.Add('EnvioSincrono=true');
      Params.Add('XmlNfse=' + _Xml);
    end
    else
      _Xml := XmlDeepNodeSearch(Input, Datasets.XsdElementName,
        '//*[local-name()="EnviarLoteRpsResposta"]');
    Datasets.LoadFromXMLContent(_Xml);
    Progress('XML carregado com sucesso.');
  end;
end.
